name: Build
on:
  push:
    branches:
      - master
env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build
    strategy:
      matrix:
        kind: ["linux", "windows", "macos"]
        include:
          - kind: linux
            os: ubuntu-latest
          - kind: windows
            os: windows-latest
          - kind: macos
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Conan
        run: |
          python3 -m pip install --upgrade pip
          pip3 install conan
          pip3 install conan_package_tools

      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Create build environment
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Initialize Conan
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: conan install .. --build missing

      - name: Configure CMake
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: ${{ matrix.kind }}
          path: ${{ github.workspace }}/build/lib/libafv_native.a

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          name: ${{ matrix.kind }}
          path: ${{ github.workspace }}/build/lib/libafv_native.a

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: ${{ matrix.kind }}
          path: ${{ github.workspace }}/build/bin/afv_native.lib
